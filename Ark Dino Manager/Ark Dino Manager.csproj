<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<!--<TargetFrameworks>net9.0-maccatalyst</TargetFrameworks>-->
		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net9.0-windows10.0.19041.0</TargetFrameworks>
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net9.0-tizen</TargetFrameworks> -->

		<!-- Note for MacCatalyst:
		The default runtime is maccatalyst-x64, except in Release config, in which case the default is maccatalyst-x64;maccatalyst-arm64.
		When specifying both architectures, use the plural <RuntimeIdentifiers> instead of the singular <RuntimeIdentifier>.
		The Mac App Store will NOT accept apps with ONLY maccatalyst-arm64 indicated;
		either BOTH runtimes must be indicated or ONLY macatalyst-x64. -->
		<!-- For example: <RuntimeIdentifiers>maccatalyst-x64;maccatalyst-arm64</RuntimeIdentifiers> -->

		<!--<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">15.0</SupportedOSPlatformVersion>-->
		<!--<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">15.0</SupportedOSPlatformVersion>-->
		<!--<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>-->
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
		<!--<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>-->
		
		
		<OutputType>Exe</OutputType>
		<RootNamespace>Ark_Dino_Manager</RootNamespace>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>
		<RepositoryType>git</RepositoryType>
		
		<!-- Display name -->
		<ApplicationTitle>Ark Dino Manager</ApplicationTitle>

		<!-- App Identifier -->
		<ApplicationId>com.xteryansolutions.arkdinomanager</ApplicationId>

		<!-- Versions -->
		<ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
		<ApplicationVersion>1</ApplicationVersion>

		<!-- To develop, package, and publish an app to the Microsoft Store, see: https://aka.ms/MauiTemplateUnpackaged -->
		<WindowsPackageType>None</WindowsPackageType>
		<AppxPackageSigningEnabled>False</AppxPackageSigningEnabled>
		<GenerateAppInstallerFile>False</GenerateAppInstallerFile>
		<NeutralLanguage>en</NeutralLanguage>
		<SignAssembly>False</SignAssembly>
		<AssemblyOriginatorKeyFile></AssemblyOriginatorKeyFile>
		<AppxAutoIncrementPackageRevision>False</AppxAutoIncrementPackageRevision>
		<AppxSymbolPackageEnabled>False</AppxSymbolPackageEnabled>
		<GenerateTestArtifacts>True</GenerateTestArtifacts>
		<HoursBetweenUpdateChecks>0</HoursBetweenUpdateChecks>
		<Platforms>AnyCPU;x64</Platforms>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<Optimize>False</Optimize>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
	  <Optimize>False</Optimize>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'" />

	<PropertyGroup>
		<ApplicationIcon>Resources\AppIcon\eggico.ico</ApplicationIcon>
		<NoWin32Manifest>true</NoWin32Manifest>
		<PackageIcon></PackageIcon>
		<NuGetAuditMode>All</NuGetAuditMode>
		<PackageId>Ark_Dino_Manger</PackageId>
		<PlatformTarget>x64</PlatformTarget>
	</PropertyGroup>
	

	<ItemGroup>
		<!-- App Icon -->
		
		<!-- Splash Screen -->
		<!--<MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#512BD4" BaseSize="128,128" />-->

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />

		<!-- Custom Fonts -->
		<MauiFont Include="Resources\Fonts\*" />

		<!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
		<!--<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />-->
	</ItemGroup>

	<ItemGroup>
		<MauiXaml Update="ArchivePage.xaml">
			<Generator>MSBuild:Compile</Generator>
		</MauiXaml>
		<MauiXaml Update="BabyPage.xaml">
		  <Generator>MSBuild:Compile</Generator>
		</MauiXaml>
		<MauiXaml Update="DinoPage.xaml">
			<Generator>MSBuild:Compile</Generator>
		</MauiXaml>
		<MauiXaml Update="MainPage.xaml">
			<Generator>MSBuild:Compile</Generator>
		</MauiXaml>
	</ItemGroup>

	<ItemGroup>
		<Compile Update="ArchivePage.xaml.cs">
			<DependentUpon>ArchivePage.xaml</DependentUpon>
		</Compile>
		<Compile Update="BabyPage.xaml.cs">
			<DependentUpon>BabyPage.xaml</DependentUpon>
		</Compile>
		<Compile Update="DinoPage.xaml.cs">
			<DependentUpon>DinoPage.xaml</DependentUpon>
		</Compile>
		<Compile Update="MainPage.xaml.cs">
			<DependentUpon>MainPage.xaml</DependentUpon>
		</Compile>
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Costura.Fody" Version="6.0.0">
		  <PrivateAssets>all</PrivateAssets>
		  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Filepicker" Version="1.1.3" />
		<PackageReference Include="Fody" Version="6.9.1">
		  <PrivateAssets>all</PrivateAssets>
		  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.Maui.Controls" Version="9.0.30">
		  <IncludeAssets></IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="9.0.1">
		  <IncludeAssets></IncludeAssets>
		</PackageReference>
	</ItemGroup>

	<ItemGroup>
	  <PackageReference Update="Microsoft.Maui.Controls.Compatibility" Version="8.0.100" />
	</ItemGroup>

	
</Project>